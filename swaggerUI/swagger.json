{
  "swagger": "2.0",
  "info": {
    "description": "Audit Api",
    "version": "1.0.0",
    "title": "Swagger Store Audits",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:4040",
  "basePath": "/v1/audits/",
  "tags": [
    {
      "name": "Store Audits",
      "description": "Everything About Audits"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/createAudit": {
      "post": {
        "tags": [
          "Store Audits"
        ],
        "summary": "creates an audit",
        "description": "",
        "operationId": "CreateAudit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "create audit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Create"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/storeAudits/{storeId}": {
      "get": {
        "tags": [
          "Store Audits"
        ],
        "summary": "Returns all audits with latest event of this storeId",
        "description": "",
        "operationId": "getAllAuditsByStoreId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of the store",
            "required": true,
            "type": "string",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "/addEvent/{auditId}": {
      "post": {
        "tags": [
          "Store Audits"
        ],
        "summary": "adds an event to the given auditId",
        "description": "",
        "operationId": "addEvent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "description": "ID of the audit",
            "required": true,
            "type": "string",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "add an event to an audit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    }
  },
  "definitions": {
    "Create": {
      "type": "object",
      "properties": {
        "storeId": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "question": {
          "type": "string"
        },
        "auditor": {
          "type": "string"
        },
        "auditedDate": {
          "type": "string"
        },
        "dueDate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "closeDate": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "closeProofUrl": {
          "type": "string"
        },
        "closedBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}